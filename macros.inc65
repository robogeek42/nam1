; Push A and X, destroys A
.macro phax
  pha
  phx
.endmacro

; Push A and Y, destroys A
.macro phay
  pha
  phy
.endmacro

; Push A, X and Y, destroys A
.macro phaxy
  pha
  phx
  phy
.endmacro

; Pull A and X
.macro plax
  plx
  pla
.endmacro

; Pull A and Y
.macro play
  ply
  pla
.endmacro

; Pull A, X and Y
.macro plaxy
  ply
  plx
  pla
.endmacro

; Push X,Y save A
.macro phxy
  phx
  phy
.endmacro
; Pull X,Y save A
.macro plxy
  ply
  plx
.endmacro

; Load zero page register reg/reg+1 with the 16-bit value, destroys A
.macro ld16 reg, value
  pha
  lda #<(value)
  sta reg
  lda #>(value)
  sta reg + 1
  pla
.endmacro


;.macro inc16 reg
;            inc reg
;            bne _mlbl_done
;            inc reg+1
;_mlbl_done: equ *
;.endmacro
.macro inc16 reg
            inc reg
            bne @_mlbl_done
            inc reg+1
@_mlbl_done:
.endmacro

.macro dec16 reg
            lda reg
            bne _mlbl_skip
            dec reg+1
_mlbl_skip: dec reg
.endmacro


; Load zero page register reg/reg+1 with the 16-bit value in regsrc, offset by off destroys A
.macro ld16reg_offset reg, regsrc, off
    LDA regsrc
    CLC
    ADC #off
    STA reg
    LDA regsrc+1
    ADC #0
    STA reg+1
.endmacro

.macro cpyword worda,wordb
	lda worda
	sta wordb
	lda worda+1
	sta wordb+1
.endmacro
